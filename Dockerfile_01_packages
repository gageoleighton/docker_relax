# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/

FROM ubuntu:16.04

# Layering RUN instructions and generating commits conforms to the
# core concepts of Docker where commits are cheap and containers
# can be created from any point in an images history, much like source control.

# Possible minimise install
# https://www.dajobe.org/blog/2015/04/18/making-debian-docker-images-smaller/

# General packages
ENV BUILD_PACKAGES="lynx htop curl wget unzip tcsh subversion sudo"

# For relax
ENV BUILD_PACKAGES="$BUILD_PACKAGES git scons grace dx "
ENV BUILD_PACKAGES="$BUILD_PACKAGES openmpi-bin openmpi-doc libopenmpi-dev"
ENV BUILD_PACKAGES="$BUILD_PACKAGES python-numpy python-scipy python-matplotlib python-pip python-wxgtk3.0"

# NMRPipe
# http://www.lorieau.com/nmr/2015/04/15/NMRPipe-ubuntu14.04.html
# https://www.ibbr.umd.edu/nmrpipe/install.html
RUN dpkg --add-architecture i386
ENV BUILD_PACKAGES="$BUILD_PACKAGES csh libc6:i386 libstdc++6:i386 libx11-6:i386"
ENV BUILD_PACKAGES="$BUILD_PACKAGES libxext6:i386 xfonts-75dpi default-jre default-jdk"

# msttcorefonts has License terms, which needs to be accepted
RUN echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections
ENV BUILD_PACKAGES="$BUILD_PACKAGES msttcorefonts"

# For MddNMR
ENV BUILD_PACKAGES="$BUILD_PACKAGES python-pyside gawk"

# For Palmer FastModelFree
ENV BUILD_PACKAGES="$BUILD_PACKAGES tk"

# For other python packages
ENV BUILD_PACKAGES="$BUILD_PACKAGES python-pandas ipython ipython-notebook"

# For pymol, and build
ENV BUILD_PACKAGES="$BUILD_PACKAGES pymol"
ENV BUILD_PACKAGES="$BUILD_PACKAGES subversion build-essential python-dev python-pmw libglew-dev"
ENV BUILD_PACKAGES="$BUILD_PACKAGES freeglut3-dev libpng-dev libfreetype6-dev libxml2-dev"

# For graphic drivers
# Variable, so question for keyboard is not asked
# https://stackoverflow.com/questions/39085462/xdummy-in-docker-container
ENV DEBIAN_FRONTEND=noninteractive
ENV BUILD_PACKAGES="$BUILD_PACKAGES mesa-utils x11-apps xserver-xorg-core xorg"
ENV BUILD_PACKAGES="$BUILD_PACKAGES nvidia-340"

# https://www.geforce.com/drivers/results/111596
#RUN apt-get update && \
#    apt-get install -y \
#        binutils module-init-tools
#RUN cd $HOME && \
#    curl -O https://us.download.nvidia.com/XFree86/Linux-x86_64/375.20/NVIDIA-Linux-x86_64-375.20.run && \
#    chmod +x NVIDIA-Linux-x86_64-375.20.run
#RUN cd $HOME && \
#    sh NVIDIA-Linux-x86_64-375.20.run -a -N --ui=none --no-kernel-module  && \
#    rm NVIDIA-Linux-x86_64-375.20.run
#RUN glxgears

# For python3
ENV BUILD_PACKAGES="$BUILD_PACKAGES python3-pip"

# Install
RUN echo "Installing these packages" $BUILD_PACKAGES

# Install all packages in 1 RUN
# apt-get remove --purge -y $AUTO_ADDED_PACKAGES
RUN apt-get update && \
    apt-get install --no-install-recommends -y $BUILD_PACKAGES && \
    rm -rf /var/lib/apt/lists/* && \
    AUTO_ADDED_PACKAGES=`apt-mark showauto` && \
    echo $AUTO_ADDED_PACKAGES
